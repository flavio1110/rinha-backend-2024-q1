version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    hostname: postgres
    container_name: db-accounts
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: super-secret
      POSTGRES_DB: accounts
      PGDATA: /var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: "250MB"
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d accounts -U user"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: "postgres -c max_connections=110 -c shared_buffers=200MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off"
  api1: &api # API - Instância 01
    image: flavio1110/rinha-backend-2024-q1:local
    environment:
      - HTTP_PORT=8080
      - DB_URL=postgres://user:super-secret@postgres:5432/accounts?sslmode=disable
      - DB_MAX_CONNECTIONS=45
      - DB_MIN_CONNECTIONS=10
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "8080"
    ports:
      - "9091:8080"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "110MB"
    healthcheck:
      test: curl -o /dev/null -s --retry 0 --head http://localhost:8080/status || exit 1
      interval: 2s
      retries: 10
      start_period: 5s
      timeout: 5s
  api2: # API - Instância 02
    <<: *api
    ports:
      - "9092:8080"
  nginx: # Load Balancer
    image: nginx:latest
    environment:
      - WAIT_HOSTS=api:8081 api:8082
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "80MB"
    healthcheck:
      test: curl --fail http://localhost:9999/status || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
